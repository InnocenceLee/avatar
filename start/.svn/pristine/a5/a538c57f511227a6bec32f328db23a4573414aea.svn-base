<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.2//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rkjh.eschool.dao.NonEntryManagementDao">
	
	<resultMap type="java.util.Map" id="personMap">  
	    <id column="id" property="id"/>
	    <result column="name" property="name" />
	    <result column="gender" property="gender" />
	    <result column="node_id" property="nodeId" />
	    <result column="node_name" property="nodeName" />
	    <result column="id_card" property="idCard" />
  	</resultMap>
  	
  	<select id="getPersonByIds" resultMap="personMap">
  		SELECT
				A.ID AS ID,
				A.NAME AS NAME,
				A.GENDER,
				D.ID AS NODE_ID,
				D.NAME AS NODE_NAME,
				A.ID_CARD
			FROM
				PERSON AS A
			LEFT JOIN PERSON_STATION AS B
				ON A.ID = B.PERSON
			LEFT JOIN SYS_STATION AS C
				ON B.STATION = C.ID
			LEFT JOIN NODE AS D
				ON C.NODE = D.ID
		    where a.id in
		    <foreach collection="ids" item="item" index="index" separator="," close=")" open="(">
					#{item}  
	    	</foreach>
  	</select>
	
	<select id="list" resultMap="personMap">
	    SELECT *
		FROM (
			SELECT
				A.ID AS ID,
				A.NAME AS NAME,
				A.GENDER,
				D.ID AS NODE_ID,
				D.NAME AS NODE_NAME,
				A.ID_CARD
			FROM
				PERSON AS A
			LEFT JOIN PERSON_STATION AS B
				ON A.ID = B.PERSON
			LEFT JOIN SYS_STATION AS C
				ON B.STATION = C.ID
			LEFT JOIN NODE AS D
				ON C.NODE = D.ID
				<if test="nodeName != NULL">
					AND D.NAME LIKE #{nodeName}
				</if> 
			WHERE 1=1
			<if test="name != NULL and name != ''">
				AND A.NAME LIKE #{name}
			</if> 
		)A
		WHERE A.ID >= (
			SELECT B.ID
			FROM (
				SELECT
					A.ID AS ID,
					A.NAME AS NAME,
					A.GENDER,
					D.ID AS NODE_ID,
					D.NAME AS NODE_NAME,
					A.ID_CARD
				FROM
					PERSON AS A
				LEFT JOIN PERSON_STATION AS B
					ON A.ID = B.PERSON
				LEFT JOIN SYS_STATION AS C
					ON B.STATION = C.ID
				LEFT JOIN NODE AS D
					ON C.NODE = D.ID
				WHERE 1=1
				<if test="name != NULL and name != ''">
					AND A.NAME LIKE #{name}
				</if> 
				<if test="nodeId != NULL">
					AND D.ID = #{nodeId}
				</if> 
			)B
			ORDER BY B.ID ASC
			LIMIT 1
			OFFSET #{page}
			)
		ORDER BY A.ID ASC
		LIMIT #{size}
	</select>
	
	<select id="count4List" resultType="java.lang.Integer">
		select count(id)
		from person
	</select>
	
	<delete id="del">
		delete from PERSON
		where id = ANY (
        ARRAY[
				<foreach collection="list" item="item" index="index" separator="," >
					#{item}  
	    		</foreach>
			]
		::integer[]);
	</delete>
	
	<insert id="add" useGeneratedKeys="true" keyProperty="id"  parameterType="java.util.Map">
		insert into person(id
		,name
		,gender
		,id_card
		)
		values(default
		,#{name,jdbcType=VARCHAR}
		,#{gender,jdbcType=VARCHAR}
		,#{idCard,jdbcType=VARCHAR}
		)
	</insert>
	
	<update id="update" parameterType="java.util.Map">
		update person set
		 name=#{name,jdbcType=VARCHAR}
		,gender=#{gender,jdbcType=VARCHAR}
		,id_card=#{idCard,jdbcType=VARCHAR}
		where
		id=#{id}
	</update>
	
	<select id="listPersonByIds" resultType="java.util.Map" parameterType="java.util.Map">
	    select d.id,d.name,c.name nodeName from person d,person_station a,sys_station b,node c where d.id=a.person and a.station=b.id and b.node=c.id and d.id in
		<foreach collection="ids" index="index" item="tag" open="("
    		separator="," close=")">
    		#{tag}
    	</foreach>
	</select>
	
	<select id="listPersonByNames" resultType="java.util.Map" parameterType="java.util.Map">
	    select d.id,d.name,c.name nodeName from person d,person_station a,sys_station b,node c where d.id=a.person and a.station=b.id and b.node=c.id and d.name in
		<foreach collection="names" index="index" item="tag" open="("
    		separator="," close=")">
    		#{tag}
    	</foreach>
	</select>
</mapper>