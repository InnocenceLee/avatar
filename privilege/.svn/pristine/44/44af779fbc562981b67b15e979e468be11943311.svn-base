package privilege;

import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.JSONObject;

import com.alibaba.fastjson.JSON;
import com.alipay.util.AlipayNotify;
import com.unionpay.acp.sdk.AcpService;
import com.unionpay.acp.sdk.LogUtil;
import com.unionpay.acp.sdk.SDKConfig;

public class Unionpay {
	//默认配置的是UTF-8
		public static String encoding_UTF8 = "UTF-8";
		
		public static String encoding_GBK = "GBK";
		//全渠道固定值
		public static String version = "5.0.0";
		
		//后台服务对应的写法参照 FrontRcvResponse.java
		public static String frontUrl = "http://127.0.0.1/ACPSample_AppServer/frontRcvResponse";

		//后台服务对应的写法参照 BackRcvResponse.java
		public static String backUrl = "http://182.92.99.123:8080/privilege/notifyUrl/notifyUrl_Unionpay.jssp";//受理方和发卡方自选填写的域[O]--后台通知地址

	public static String UnionPay(String order) {
		try
		{
		JSONObject jsStr = new JSONObject(order);
		String out_trade_no_ = new SimpleDateFormat("yyyyMMdd").format(new Date())+System.currentTimeMillis();
		SDKConfig.getConfig().loadPropertiesFromSrc();
		String merId = "802110048160802";//req.getParameter("merId");
		String txnAmt = "1";//req.getParameter("txnAmt");
		String orderId = jsStr.getString("order_no").equals("")?out_trade_no_:jsStr.getString("order_no")==null?out_trade_no_:jsStr.getString("order_no");//new SimpleDateFormat("yyyyMMdd").format(new Date())+System.currentTimeMillis();//req.getParameter("orderId");
		String txnTime = new SimpleDateFormat("yyyyMMddHHmmss").format(new Date());//req.getParameter("txnTime");
		
		Map<String, String> contentData = new HashMap<String, String>();
		
		/***银联全渠道系统，产品参数，除了encoding自行选择外其他不需修改***/
		contentData.put("version", version);            //版本号 全渠道默认值
		contentData.put("encoding", encoding_UTF8);     //字符集编码 可以使用UTF-8,GBK两种方式
		contentData.put("signMethod", "01");           		 	//签名方法 目前只支持01：RSA方式证书加密
		contentData.put("txnType", "01");              		 	//交易类型 01:消费
		contentData.put("txnSubType", "01");           		 	//交易子类 01：消费
		contentData.put("bizType", "000201");          		 	//填写000201
		contentData.put("channelType", "08");          		 	//渠道类型 08手机

		/***商户接入参数***/
		contentData.put("merId", merId);   		 				//商户号码，请改成自己申请的商户号或者open上注册得来的777商户号测试
		contentData.put("accessType", "0");            		 	//接入类型，商户接入填0 ，不需修改（0：直连商户， 1： 收单机构 2：平台商户）
		contentData.put("orderId", orderId);        	 	    //商户订单号，8-40位数字字母，不能含“-”或“_”，可以自行定制规则	
		contentData.put("txnTime", txnTime);		 		    //订单发送时间，取系统时间，格式为YYYYMMDDhhmmss，必须取当前时间，否则会报txnTime无效
		contentData.put("accType", "01");					 	//账号类型 01：银行卡02：存折03：IC卡帐号类型(卡介质)
		contentData.put("txnAmt", txnAmt);						//交易金额 单位为分，不能带小数点
		contentData.put("currencyCode", "156");                 //境内商户固定 156 人民币
		
		if(jsStr.getString("type").equals("order"))
		{
			contentData.put("reqReserved", jsStr.getString("gf_id"));              //商户自定义保留域，交易应答时会原样返回
		}else{
			contentData.put("reqReserved", "-"+jsStr.getString("gf_id"));              //商户自定义保留域，交易应答时会原样返回
		}
		//后台通知地址（需设置为外网能访问 http https均可），支付成功后银联会自动将异步通知报文post到商户上送的该地址，【支付失败的交易银联不会发送后台通知】
		//后台通知参数详见open.unionpay.com帮助中心 下载  产品接口规范  网关支付产品接口规范 消费交易 商户通知
		//注意:1.需设置为外网能访问，否则收不到通知    2.http https均可  3.收单后台通知后需要10秒内返回http200或302状态码 
		//    4.如果银联通知服务器发送通知后10秒内未收到返回状态码或者应答码非http200或302，那么银联会间隔一段时间再次发送。总共发送5次，银联后续间隔1、2、4、5 分钟后会再次通知。
		//    5.后台通知地址如果上送了带有？的参数，例如：http://abc/web?a=b&c=d 在后台通知处理程序验证签名之前需要编写逻辑将这些字段去掉再验签，否则将会验签失败
		contentData.put("backUrl", backUrl);
		
		/**对请求参数进行签名并发送http post请求，接收同步应答报文**/
		Map<String, String> reqData = AcpService.sign(contentData,encoding_UTF8);			 //报文中certId,signature的值是在signData方法中获取并自动赋值的，只要证书配置正确即可。
		String requestAppUrl = SDKConfig.getConfig().getAppRequestUrl();								 //交易请求url从配置文件读取对应属性文件acp_sdk.properties中的 acpsdk.backTransUrl
		Map<String, String> rspData = AcpService.post(reqData,requestAppUrl,encoding_UTF8);  //发送请求报文并接受同步应答（默认连接超时时间30秒，读取返回结果超时时间30秒）;这里调用signData之后，调用submitUrl之前不能对submitFromData中的键值对做任何修改，如果修改会导致验签不通过
		WriteTxt.contentToTxt("银联返回结果rspData:"+rspData);
		
		/**对应答码的处理，请根据您的业务逻辑来编写程序,以下应答码处理逻辑仅供参考------------->**/
		//应答码规范参考open.unionpay.com帮助中心 下载  产品接口规范  《平台接入接口规范-第5部分-附录》
		if(!rspData.isEmpty()){
			if(AcpService.validate(rspData, encoding_UTF8)){
				LogUtil.writeLog("验证签名成功");
				String respCode = rspData.get("respCode") ;
				WriteTxt.contentToTxt("银联流水号：respCode："+respCode+"   rspData:"+rspData);
				
				if(("00").equals(respCode)){
					//成功,获取tn号
					String tn = rspData.get("tn");
					return tn;
					//TODO
				}else{
					//其他应答码为失败请排查原因或做失败处理
					//TODO
				}
			}else{
				LogUtil.writeErrorLog("验证签名失败");
				WriteTxt.contentToTxt("验证签名失败");
				//TODO 检查验证签名失败的原因
			}
		}else{
			//未返回正确的http状态
			LogUtil.writeErrorLog("未获取到返回报文或返回http状态码非200");
		}
		//String reqMessage = DemoBase.genHtmlResult(reqData);
		//String rspMessage = DemoBase.genHtmlResult(rspData);
		//resp.getWriter().write("请求报文:<br/>"+reqMessage+"<br/>" + "应答报文:</br>"+rspMessage+"");

		return "银联支付请求失败";
	}catch(Exception ex){
		System.out.println(ex.toString());
				return "";
			}
	}
	/**
	支付宝回调接口
	*/
	public static String UnNotifyUrl(HttpServletRequest request) {
//		HttpRequest request = new HttpRequest(HttpResultType.BYTES);
//		HttpResponse respon =new HttpResponse();
		String result = "";
		BackRcvResponse backr = new BackRcvResponse();
		//PrintWriter out;
		try {
			//out = response.getWriter();
			//String LinkString =(String)session.getAttribute("LinkString");
			//boolean isVerify = RSA.verify(LinkString, jsStr.getString("sign"), SysCommConstant.ALI_PUBLIC_KEY, "utf-8");
			Map<String, String> map = backr.doPost(request);
			
			WriteTxt.contentToTxt("进入银联支付：reqReserved:"+map.get("reqReserved"));
			return "{\"gf_order_id\":\""+map.get("reqReserved")+"\"}";

		} catch (Exception e) {
			e.printStackTrace();
		}
		return "fail";
	}
}
